{"ast":null,"code":"var _jsxFileName = \"E:\\\\Websites\\\\EchoMe\\\\src\\\\components\\\\InputBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport './InputBox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InputBox = ({\n  onSendMessage,\n  isNightMode\n}) => {\n  _s();\n  const [message, setMessage] = useState('');\n  const [isTyping, setIsTyping] = useState(false);\n  const textareaRef = useRef(null);\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (message.trim()) {\n      onSendMessage(message.trim());\n      setMessage('');\n      setIsTyping(false);\n    }\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && !e.shiftKey) {\n      e.preventDefault();\n      handleSubmit(e);\n    }\n  };\n  const handleInput = e => {\n    setMessage(e.target.value);\n    setIsTyping(e.target.value.length > 0);\n  };\n  const handleEmojiClick = emoji => {\n    var _textareaRef$current;\n    setMessage(prev => prev + emoji);\n    (_textareaRef$current = textareaRef.current) === null || _textareaRef$current === void 0 ? void 0 : _textareaRef$current.focus();\n  };\n  const quickPhrases = [\"yo what's up\", \"feeling good today\", \"that's wild fr\", \"thanks for listening\", \"bruh moment\"];\n  const handleQuickPhrase = phrase => {\n    var _textareaRef$current2;\n    setMessage(phrase);\n    (_textareaRef$current2 = textareaRef.current) === null || _textareaRef$current2 === void 0 ? void 0 : _textareaRef$current2.focus();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `input-container ${isNightMode ? 'night-mode' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quick-phrases\",\n      children: quickPhrases.map((phrase, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"quick-phrase-btn\",\n        onClick: () => handleQuickPhrase(phrase),\n        title: `Quick: ${phrase}`,\n        children: phrase\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"input-form\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          ref: textareaRef,\n          value: message,\n          onChange: handleInput,\n          onKeyDown: handleKeyDown,\n          placeholder: \"Type your message here... (Press Enter to send)\",\n          className: \"message-input\",\n          rows: \"1\",\n          autoFocus: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"emoji-picker\",\n            children: ['ðŸ˜Š', 'ðŸ˜‚', 'ðŸ˜Ž', 'ðŸ’€', 'âœ¨', 'ðŸ”¥', 'ðŸ’¯', 'ðŸ‘‘', 'ðŸ’…', 'ðŸŒŸ'].map((emoji, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"emoji-btn\",\n              onClick: () => handleEmojiClick(emoji),\n              title: `Add ${emoji}`,\n              children: emoji\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: `send-button ${isTyping ? 'active' : ''}`,\n            disabled: !message.trim(),\n            title: \"Send message (Enter)\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"send-icon\",\n              children: \"\\u27A4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), isTyping && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"typing-indicator\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"Typing...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(InputBox, \"be09H2vArg4pAJnYvkIrrc5rkNw=\");\n_c = InputBox;\nexport default InputBox;\nvar _c;\n$RefreshReg$(_c, \"InputBox\");","map":{"version":3,"names":["React","useState","useRef","jsxDEV","_jsxDEV","InputBox","onSendMessage","isNightMode","_s","message","setMessage","isTyping","setIsTyping","textareaRef","handleSubmit","e","preventDefault","trim","handleKeyDown","key","shiftKey","handleInput","target","value","length","handleEmojiClick","emoji","_textareaRef$current","prev","current","focus","quickPhrases","handleQuickPhrase","phrase","_textareaRef$current2","className","children","map","index","onClick","title","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","ref","onChange","onKeyDown","placeholder","rows","autoFocus","type","disabled","_c","$RefreshReg$"],"sources":["E:/Websites/EchoMe/src/components/InputBox.jsx"],"sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport './InputBox.css';\r\n\r\nconst InputBox = ({ onSendMessage, isNightMode }) => {\r\n  const [message, setMessage] = useState('');\r\n  const [isTyping, setIsTyping] = useState(false);\r\n  const textareaRef = useRef(null);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (message.trim()) {\r\n      onSendMessage(message.trim());\r\n      setMessage('');\r\n      setIsTyping(false);\r\n    }\r\n  };\r\n\r\n  const handleKeyDown = (e) => {\r\n    if (e.key === 'Enter' && !e.shiftKey) {\r\n      e.preventDefault();\r\n      handleSubmit(e);\r\n    }\r\n  };\r\n\r\n  const handleInput = (e) => {\r\n    setMessage(e.target.value);\r\n    setIsTyping(e.target.value.length > 0);\r\n  };\r\n\r\n  const handleEmojiClick = (emoji) => {\r\n    setMessage(prev => prev + emoji);\r\n    textareaRef.current?.focus();\r\n  };\r\n\r\n  const quickPhrases = [\r\n    \"yo what's up\",\r\n    \"feeling good today\",\r\n    \"that's wild fr\",\r\n    \"thanks for listening\",\r\n    \"bruh moment\"\r\n  ];\r\n\r\n  const handleQuickPhrase = (phrase) => {\r\n    setMessage(phrase);\r\n    textareaRef.current?.focus();\r\n  };\r\n\r\n  return (\r\n    <div className={`input-container ${isNightMode ? 'night-mode' : ''}`}>\r\n      {/* Quick Phrases */}\r\n      <div className=\"quick-phrases\">\r\n        {quickPhrases.map((phrase, index) => (\r\n          <button\r\n            key={index}\r\n            className=\"quick-phrase-btn\"\r\n            onClick={() => handleQuickPhrase(phrase)}\r\n            title={`Quick: ${phrase}`}\r\n          >\r\n            {phrase}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Main Input */}\r\n      <form onSubmit={handleSubmit} className=\"input-form\">\r\n        <div className=\"input-wrapper\">\r\n          <textarea\r\n            ref={textareaRef}\r\n            value={message}\r\n            onChange={handleInput}\r\n            onKeyDown={handleKeyDown}\r\n            placeholder=\"Type your message here... (Press Enter to send)\"\r\n            className=\"message-input\"\r\n            rows=\"1\"\r\n            autoFocus\r\n          />\r\n          \r\n          <div className=\"input-actions\">\r\n            {/* Emoji Picker */}\r\n            <div className=\"emoji-picker\">\r\n              {['ðŸ˜Š', 'ðŸ˜‚', 'ðŸ˜Ž', 'ðŸ’€', 'âœ¨', 'ðŸ”¥', 'ðŸ’¯', 'ðŸ‘‘', 'ðŸ’…', 'ðŸŒŸ'].map((emoji, index) => (\r\n                <button\r\n                  key={index}\r\n                  type=\"button\"\r\n                  className=\"emoji-btn\"\r\n                  onClick={() => handleEmojiClick(emoji)}\r\n                  title={`Add ${emoji}`}\r\n                >\r\n                  {emoji}\r\n                </button>\r\n              ))}\r\n            </div>\r\n\r\n            {/* Send Button */}\r\n            <button\r\n              type=\"submit\"\r\n              className={`send-button ${isTyping ? 'active' : ''}`}\r\n              disabled={!message.trim()}\r\n              title=\"Send message (Enter)\"\r\n            >\r\n              <span className=\"send-icon\">âž¤</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </form>\r\n\r\n      {/* Typing Indicator */}\r\n      {isTyping && (\r\n        <div className=\"typing-indicator\">\r\n          <span>Typing...</span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InputBox; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}