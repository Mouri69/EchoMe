{"ast":null,"code":"var _jsxFileName = \"E:\\\\Websites\\\\EchoMe\\\\src\\\\components\\\\ChatWindow.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport './ChatWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatWindow = ({\n  messages,\n  isNightMode\n}) => {\n  _s();\n  const messagesEndRef = useRef(null);\n  const scrollToBottom = () => {\n    var _messagesEndRef$curre;\n    (_messagesEndRef$curre = messagesEndRef.current) === null || _messagesEndRef$curre === void 0 ? void 0 : _messagesEndRef$curre.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  };\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n  const formatMessage = text => {\n    // Simple emoji detection and formatting\n    const emojiRegex = /[\\u{1F600}-\\u{1F64F}]|[\\u{1F300}-\\u{1F5FF}]|[\\u{1F680}-\\u{1F6FF}]|[\\u{1F1E0}-\\u{1F1FF}]|[\\u{2600}-\\u{26FF}]|[\\u{2700}-\\u{27BF}]/gu;\n    return text.split(' ').map((word, index) => {\n      if (emojiRegex.test(word)) {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"emoji\",\n          children: word\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 16\n        }, this);\n      }\n      return word + ' ';\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `chat-window ${isNightMode ? 'night-mode' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-messages\",\n      children: [messages.length === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"welcome-message\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"welcome-icon\",\n          children: \"\\uD83E\\uDDEC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Welcome to Echo Me!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Start chatting and I'll learn your unique way of speaking.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Try saying something casual like \\\"yo what's up\\\" or formal like \\\"Hello, how are you today?\\\"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this) : messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${message.sender === 'user' ? 'user-message' : 'bot-message'}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-text\",\n            children: formatMessage(message.text)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-timestamp\",\n            children: message.timestamp\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-avatar\",\n          children: message.sender === 'user' ? 'ðŸ‘¤' : 'ðŸ§¬'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, message.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messagesEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatWindow, \"0epSoi03NVSoD0I0FiLK4iVNXOA=\");\n_c = ChatWindow;\nexport default ChatWindow;\nvar _c;\n$RefreshReg$(_c, \"ChatWindow\");","map":{"version":3,"names":["React","useRef","useEffect","jsxDEV","_jsxDEV","ChatWindow","messages","isNightMode","_s","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","formatMessage","text","emojiRegex","split","map","word","index","test","className","children","fileName","_jsxFileName","lineNumber","columnNumber","length","message","sender","timestamp","id","ref","_c","$RefreshReg$"],"sources":["E:/Websites/EchoMe/src/components/ChatWindow.jsx"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\r\nimport './ChatWindow.css';\r\n\r\nconst ChatWindow = ({ messages, isNightMode }) => {\r\n  const messagesEndRef = useRef(null);\r\n\r\n  const scrollToBottom = () => {\r\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  }, [messages]);\r\n\r\n  const formatMessage = (text) => {\r\n    // Simple emoji detection and formatting\r\n    const emojiRegex = /[\\u{1F600}-\\u{1F64F}]|[\\u{1F300}-\\u{1F5FF}]|[\\u{1F680}-\\u{1F6FF}]|[\\u{1F1E0}-\\u{1F1FF}]|[\\u{2600}-\\u{26FF}]|[\\u{2700}-\\u{27BF}]/gu;\r\n    \r\n    return text.split(' ').map((word, index) => {\r\n      if (emojiRegex.test(word)) {\r\n        return <span key={index} className=\"emoji\">{word}</span>;\r\n      }\r\n      return word + ' ';\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className={`chat-window ${isNightMode ? 'night-mode' : ''}`}>\r\n      <div className=\"chat-messages\">\r\n        {messages.length === 0 ? (\r\n          <div className=\"welcome-message\">\r\n            <div className=\"welcome-icon\">ðŸ§¬</div>\r\n            <h3>Welcome to Echo Me!</h3>\r\n            <p>Start chatting and I'll learn your unique way of speaking.</p>\r\n            <p>Try saying something casual like \"yo what's up\" or formal like \"Hello, how are you today?\"</p>\r\n          </div>\r\n        ) : (\r\n          messages.map((message) => (\r\n            <div\r\n              key={message.id}\r\n              className={`message ${message.sender === 'user' ? 'user-message' : 'bot-message'}`}\r\n            >\r\n              <div className=\"message-content\">\r\n                <div className=\"message-text\">\r\n                  {formatMessage(message.text)}\r\n                </div>\r\n                <div className=\"message-timestamp\">\r\n                  {message.timestamp}\r\n                </div>\r\n              </div>\r\n              <div className=\"message-avatar\">\r\n                {message.sender === 'user' ? 'ðŸ‘¤' : 'ðŸ§¬'}\r\n              </div>\r\n            </div>\r\n          ))\r\n        )}\r\n        <div ref={messagesEndRef} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatWindow; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAChD,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAY,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAMC,cAAc,GAAGR,MAAM,CAAC,IAAI,CAAC;EAEnC,MAAMS,cAAc,GAAGA,CAAA,KAAM;IAAA,IAAAC,qBAAA;IAC3B,CAAAA,qBAAA,GAAAF,cAAc,CAACG,OAAO,cAAAD,qBAAA,uBAAtBA,qBAAA,CAAwBE,cAAc,CAAC;MAAEC,QAAQ,EAAE;IAAS,CAAC,CAAC;EAChE,CAAC;EAEDZ,SAAS,CAAC,MAAM;IACdQ,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACJ,QAAQ,CAAC,CAAC;EAEd,MAAMS,aAAa,GAAIC,IAAI,IAAK;IAC9B;IACA,MAAMC,UAAU,GAAG,mIAAmI;IAEtJ,OAAOD,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAK;MAC1C,IAAIJ,UAAU,CAACK,IAAI,CAACF,IAAI,CAAC,EAAE;QACzB,oBAAOhB,OAAA;UAAkBmB,SAAS,EAAC,OAAO;UAAAC,QAAA,EAAEJ;QAAI,GAA9BC,KAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAgC,CAAC;MAC1D;MACA,OAAOR,IAAI,GAAG,GAAG;IACnB,CAAC,CAAC;EACJ,CAAC;EAED,oBACEhB,OAAA;IAAKmB,SAAS,EAAE,eAAehB,WAAW,GAAG,YAAY,GAAG,EAAE,EAAG;IAAAiB,QAAA,eAC/DpB,OAAA;MAAKmB,SAAS,EAAC,eAAe;MAAAC,QAAA,GAC3BlB,QAAQ,CAACuB,MAAM,KAAK,CAAC,gBACpBzB,OAAA;QAAKmB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,gBAC9BpB,OAAA;UAAKmB,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAAE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtCxB,OAAA;UAAAoB,QAAA,EAAI;QAAmB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC5BxB,OAAA;UAAAoB,QAAA,EAAG;QAA0D;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACjExB,OAAA;UAAAoB,QAAA,EAAG;QAA0F;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9F,CAAC,GAENtB,QAAQ,CAACa,GAAG,CAAEW,OAAO,iBACnB1B,OAAA;QAEEmB,SAAS,EAAE,WAAWO,OAAO,CAACC,MAAM,KAAK,MAAM,GAAG,cAAc,GAAG,aAAa,EAAG;QAAAP,QAAA,gBAEnFpB,OAAA;UAAKmB,SAAS,EAAC,iBAAiB;UAAAC,QAAA,gBAC9BpB,OAAA;YAAKmB,SAAS,EAAC,cAAc;YAAAC,QAAA,EAC1BT,aAAa,CAACe,OAAO,CAACd,IAAI;UAAC;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,eACNxB,OAAA;YAAKmB,SAAS,EAAC,mBAAmB;YAAAC,QAAA,EAC/BM,OAAO,CAACE;UAAS;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACf,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC,eACNxB,OAAA;UAAKmB,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAC5BM,OAAO,CAACC,MAAM,KAAK,MAAM,GAAG,IAAI,GAAG;QAAI;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACrC,CAAC;MAAA,GAbDE,OAAO,CAACG,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAcZ,CACN,CACF,eACDxB,OAAA;QAAK8B,GAAG,EAAEzB;MAAe;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACpB,EAAA,CAzDIH,UAAU;AAAA8B,EAAA,GAAV9B,UAAU;AA2DhB,eAAeA,UAAU;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}